syntax = "proto3";



package distributedstore;



message NodeInfo {

  int32 id = 1;

  string ip = 2;

  int32 port = 3;

}

// Mensajes adicionales para el algoritmo de quórum ponderado

message VoteRequest {

  string key = 1;

}



message VoteResponse {

  int32 vote = 1;

}



message CommitRequest {

  string key = 1;

  string value = 2;

}



message CommitResponse {

  bool success = 1;

}



service KeyValueStore {

  rpc put(PutRequest) returns (PutResponse);

  rpc get(GetRequest) returns (GetResponse);

  rpc slowDown(SlowDownRequest) returns (SlowDownResponse);

  rpc restore(RestoreRequest) returns (RestoreResponse);

  rpc registerNode(NodeInfo) returns (Response);

  rpc canCommit(CanCommitRequest) returns (Response);

  rpc doCommit(DoCommitRequest) returns (Response);



  // Nuevas operaciones para el algoritmo de quórum ponderado

  rpc propagatePut(PropagatePutRequest) returns (PropagatePutResponse);

  rpc requestVote(VoteRequest) returns (VoteResponse);

  rpc commitToNode(CommitRequest) returns (CommitResponse);

}

// Mensajes adicionales para las operaciones del algoritmo de quórum ponderado

message PropagatePutRequest {

  string key = 1;

  string value = 2;

}



message PropagatePutResponse {

  bool success = 1;

}



message PutRequest {

  string key = 1;

  optional string value = 2;

}



message PutResponse {

  bool success = 1;

}



message GetRequest {

  string key = 1;

}



message GetResponse {

  string value = 1;

  bool found = 2;

}



message SlowDownRequest {

  int32 seconds = 1;

}



message SlowDownResponse {

  bool success = 1;

}



message RestoreRequest {}



message RestoreResponse {

  bool success = 1;

}



message Empty {}



message CanCommitRequest {

  string key = 1;

}



message DoCommitRequest {

  string key = 1;

  string value = 2;

}



message Response {

  bool success = 1;

}